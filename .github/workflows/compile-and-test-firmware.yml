name: Compile and test Arduino Sketch

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v2.0.0

      - name: Install Arduino Core
        run: |
          arduino-cli core update-index
          arduino-cli core install arduino:avr

  compile:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Compile Arduino Sketch
        run: |
          arduino-cli compile --fqbn arduino:avr:uno ArdulinkProtocol/ArdulinkProtocol.ino --output-dir ArdulinkProtocol

      - name: Save hex-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ardulink-firmware-uno
          path: ArdulinkProtocol/ArdulinkProtocol.ino.hex

  test:
    runs-on: ubuntu-latest
    needs: compile

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Set working directory path
        id: set-path
        run: echo "CURRENT_DIR=$(pwd)" >> $GITHUB_ENV
      - name: Run behave in the 'tests' folder
        working-directory: tests
        env:
          SKETCH_FILE: ${{ env.CURRENT_DIR }}/ArdulinkProtocol/ArdulinkProtocol.ino.hex
        run: |
          behave -f pretty -f html-pretty

      - name: Test Report
        uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5 # v1
        if: (success() || failure()) && github.event_name != 'pull_request' && github.actor != 'dependabot[bot]'  # run this step even if previous step failed
        with:
          name: Tests Report
          path: "tests/test-results/*.xml"
          reporter: java-junit
