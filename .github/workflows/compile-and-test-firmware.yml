name: Compile Arduino Sketch

on:
  push:
  pull_request:
  workflow_dispatch:
  workflow_call:

jobs:
  compile_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v2.0.0

      - name: Install Arduino Core
        run: |
          arduino-cli core update-index
          arduino-cli core install arduino:avr

      - name: Compile Arduino Sketch
        run: |
          arduino-cli compile --fqbn arduino:avr:uno ArdulinkProtocol/ArdulinkProtocol.ino --output-dir ArdulinkProtocol


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Run behave in the 'tests' folder
        env:
          SKETCH_FILE: ArdulinkProtocol/ArdulinkProtocol.ino.hex
        run: |
          behave --junit --junit-directory ./test-results -f pretty tests

      - name: Test Report
        uses: dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3 # v1
        if: (success() || failure()) && github.event_name != 'pull_request' && github.actor != 'dependabot[bot]'  # run this step even if previous step failed
        with:
          name: Tests Report
          path: "test-results/*.xml"
          reporter: java-junit


      - name: Save hex-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ardulink-firmware-uno
          path: |
            ArdulinkProtocol/ArdulinkProtocol.ino
            ArdulinkProtocol/ArdulinkProtocol.ino.hex

      - name: Verify if the examples do compile and run tests
        run: |
          ./examples/compile-all.sh
          ./examples/run-tests.sh

